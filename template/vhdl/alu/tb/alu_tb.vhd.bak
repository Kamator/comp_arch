library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.core_pkg.all;
use work.op_pkg.all

entity alu_tb is
end entity;

architecture bench of alu_tb is

    component alu is
    port (
        op   : in  alu_op_type;
        A, B : in  data_type;
        R    : out data_type := (others => '0');
        Z    : out std_logic := '0'
    );
    end component;

	signal clk : std_logic;
	signal res_n : std_logic;
	signal A, B, R : data_type;
	signal Z : std_logic;
	signal op : alu_op_type;

	constant CLK_PERIOD : time := 20 ns;
	signal stop_clock : boolean := false;
begin

	uut : alu
	 port (
        op => op;
        A => A;
        B => B;
        R => R;
        Z => Z
     );

	stimulus : process
	begin
		
		
		wait until falling_edge(vd);
		report "simulation Done";
		stop_clock <= true;
		
		wait;
	end process;

	generate_clk : process
	begin
		while not stop_clock loop
			clk <= '0', '1' after CLK_PERIOD / 2;
			wait for CLK_PERIOD;
		end loop;
		wait;
	end process;

end architecture;

